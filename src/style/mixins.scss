@import './tokens.scss';

@mixin focus($focusColor: $c-ui-accent-blue, $paddingColor: #ffffff) {
  box-shadow: 0 0 0px 2px $paddingColor, 0 0 0px 4px $focusColor;
}

@mixin typography($element) {
  @if $element == header {
    font-weight: var(--font-weight-bold);
    font-size: var(--font-size-lg);
    line-height: var(--line-height-xl);
    color: var(--c-ui-gray-500);
  }
  @if $element == teaser {
    font-weight: var(--font-weight-bold);
    font-size: var(--font-size-sm);
    line-height: var(--line-height-lg);
    color: var(--c-ui-gray-500);
  }
  @if $element == text {
    font-weight: var(--font-weight-regular);
    font-size: var(--font-size-sm);
    line-height: var(--line-height-sm);
    color: var(--c-ui-gray-500);
  }
  @if $element == chart-title {
    font-weight: var(--font-weight-bold);
    font-size: var(--font-size-base);
    line-height: var(--line-height-xs);
    color: var(--c-ui-gray-500);
  }
  @if $element == chart-description {
    font-weight: var(--font-weight-regular);
    font-size: var(--font-size-xs);
    line-height: var(--line-height-2xs);
    color: var(--c-ui-gray-500);
  }
  @if $element == chart-annotation {
    font-family: Georgia, serif;
    font-style: italic;
    font-size: var(--font-size-xs);
    line-height: var(--line-height-2xs);
    color: var(--c-chart-annotation);
  }
  @if $element == chart-legend {
    font-weight: var(--font-weight-light);
    font-size: var(--font-size-xs);
    line-height: var(--line-height-2xs);
    color: var(--c-ui-gray-500);
  }
  @if $element == axis-title {
    font-weight: var(--font-weight-bold);
    font-size: var(--font-size-xs);
    line-height: var(--line-height-3xs);
    color: var(--c-chart-axis-text);
  }
  @if $element == axis-value {
    font-weight: var(--font-weight-light);
    font-size: var(--font-size-xs);
    line-height: var(--line-height-3xs);
    color: var(--c-chart-axis-text);
  }
  @if $element == chart-source {
    font-weight: var(--font-weight-regular);
    font-size: var(--font-size-xs);
    line-height: var(--line-height-3xs);
    color: var(--c-ui-gray-300);
  }
}

@mixin breakpoint($mode) {
  @if $mode == narrow {
    @media (max-width: #{$bp-xs - 1}) {
      @content;
    }
  }
  @if $mode == mobile {
    @media (max-width: #{$bp-sm - 1}) {
      @content;
    }
  }
  @if $mode == tablet {
    @media (max-width: #{$bp-md - 1}) {
      @content;
    }
  }
  @if $mode == laptop {
    @media (min-width: #{$bp-lg}) {
      @content;
    }
  }
}

@mixin visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
}

/* remove animations and transitions for people that prefer not to see them */
@mixin use-reduced-motion {
  animation-duration: 0.01ms !important;
  animation-iteration-count: 1 !important;
  transition-duration: 0.01ms !important;
  scroll-behavior: auto !important;
}
